<?php

# Установка типа данных и кодировки
    header('Content-type: text/html; charset=utf-8');
# Отключаем Кеширование
    header('Cache-Control: no-store; no-cache');

    # error_reporting(E_NOTICE); # Проверим на Предупреждения

class Users{

    # Инициализируем Константу, где Значение - это Время АКТУАЛЬНОСТИ данных посещения пользователя
    const SCNDS = 5;
    # Инициализируем Константу, где Значение - это Время ХРАНЕНИЯ данных посещения пользователя
    const SAVEDATA = 10;

    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

            # Help-Метод - выводит данные из Массива и показывает текущую метку времени
            function h_view($id, $array){
                echo '  <span style="color: #0000ac">'.self::SCNDS . ' сек. Актуальность данных </span><br />';
                echo '<span style="color: #0000AC">'.self::SAVEDATA . ' сек. Хранение данных </span><hr />';

                echo '<span style="color: red">Время сейчас: ' . time() . '</span> ' . date('H:i:s',time()) . '<br />'; print_r($array); echo '<hr />';
                # ``````````````````````````````````````````````````````
                foreach ($array as $key => $value) {
                    if($id == $key) { echo "<b>Вы </b> ·············· <b>Ключ</b>: $key; <b>Значение</b>: $value<br />"; }
                    else            { echo "<b>Other User</b> ··· <b>Ключ</b>: $key; <b>Значение</b>: $value<br />"; }
                } # end :: foreach
            } # end :: view()

    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

    # Реализуем основную логику - в Конструкторе
    function __construct(){

        # Стартуем сессию
        session_start();

        # Получим уникальный идентификатор сессии
        $id = session_id();

            # ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
            # Если файл НЕ существует
            if(!file_exists('session.txt')){

                    # Формируем массив, где Ключ - это Сессионный ID, а Значение, это текущая метка времени + SCNDS
                    # Данный элемент массива - будет хранить метку времени, до наступления которой - пользователь считается online
                    $array = array($id=>time()+self::SCNDS);

            } else { # :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
            # Если файл Существует

                # Зачитываем файл
                $arraySerialize = file_get_contents('session.txt');

                # Если файл пуст -
                if($arraySerialize==''){

                    # Формируем массив, где Ключ - это Сессионный ID, а Значение, это текущая метка времени + SCNDS
                    # Данный элемент массива - будет хранить метку времени, до наступления которой - пользователь считается online
                    $array = array($id=>time()+self::SCNDS);

                } else {
                # Иначе, файл содержит сериализованный массив

                    # Десериализуем массив
                    $array = unserialize($arraySerialize);

                    # ==================================================================================================
                    # ==================================================================================================
                    # ==================================================================================================

                    # Если Сессионного ID в массиве - не существует, добавляем ID в массив
                    if(empty($array[$id])){
                        # Формируем новый элемент массива:
                        # где Ключ - это Сессионный ID, а Значение, это текущая метка времени + SCNDS
                        # Данный элемент массива - будет хранить метку времени, до наступления которой - пользователь считается online
                        $array[$id] = time()+self::SCNDS;
                    }

                    # Перебираем Массив ```````````````````````````````````````
                    foreach ($array as $key => $value) {

                        # Проверяем, с каким Сессионным ID мы имеем дело
                        if($id == $key) { # Если это существующий Сессионный ID Клиента - который сейчас на сайте

                            # (В момент перебора) проверяем, актуально ли время у данного ID (Ключа)
                            # Если текущая метка времени - больше value, перезаписываем $value (делая метку времени опять актуальной для ID Клиента который сейчас на сайте)
                            if(time() > $value){
                                $array[$key] = time()+self::SCNDS;
                            }

                        } # Иначе, это остальные элементы массива. Не обновляем метку времени, тем самым указывая, что пользователь покинул ресурс
                    } # end :: foreach
                    # `````````````````````````````````````````````````````````

                    # ==================================================================================================
                    # ==================================================================================================
                    # ==================================================================================================

                } # end :: else ~ файл содержит сериализованный массив
            }  # end :: else ~ Если файл Существует :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


            $cnt = count($array); # Подсчитываем количество элементов массива
            # Перебираем Массив ````````````````````````````````````````
            foreach ($array as $key => $value) {

                # Подсчитываем количество пользователей online - сейчас на сайте
                if(time() > $value){ $cnt--; }

                # Также, в данном цикле, *******************************
                # Удаляем те элементы массива (тех пользователей, у которых метка времени их актуальности, больше на SAVEDATA секунд)
                if(time() > $value+self::SAVEDATA){
                    unset($array[$key]);
                }
                # ******************************************************

            } # end :: foreach
            # ``````````````````````````````````````````````````````````

                #
                #
                #
                $this->h_view($id, $array); # Выводим техническую информацию

                        echo '<hr />Пользователей на сайте: <b>'.$cnt.'</b>';

                                $arraySerialize = serialize($array); # Сериализуем Массив
                                file_put_contents('session.txt',$arraySerialize); # записываем в файл

    } # end :: __construct()

} # END :: class Users

echo '<!DOCTYPE html>
        <html xmlns="http://www.w3.org/1999/xhtml" lang="ru">
            <head>
                <meta charset="utf-8">
                <style>html, body { font-family: arial; font-size: 15px; }</style>
            </head>';

$obj = new Users;

?>